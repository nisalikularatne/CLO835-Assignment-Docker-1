name: Deploy app and database images to AWS ECR repo
on:
  workflow_dispatch:
    branches:
      - prod
    paths:
      - application/*
  push:
    branches:
      - prod
    paths:
      - application/*

  pull_request:
    branches:
      - prod
    paths:
      - application/*

env:
  APPLICATION_ECR_PREFIX:  docker-dev-containers-application
  DATABASE_ECR_PREFIX: docker-dev-containers-database
  ECR_REPOSITORY:  repo
  DATABASE: mysql
  APPLICATION: application
  AWS_REGION: us-east-1
  WORKING_DIR: ./application/*

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        working-directory: ./application

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: "latest"
        run: |
          docker build -t $ECR_REGISTRY/${DATABASE_ECR_PREFIX}-${ECR_REPOSITORY}:${IMAGE_TAG} -f Dockerfile_mysql .
          docker build -t $ECR_REGISTRY/${APPLICATION_ECR_PREFIX}-${ECR_REPOSITORY}:${IMAGE_TAG} .
          docker push $ECR_REGISTRY/${DATABASE_ECR_PREFIX}-${ECR_REPOSITORY}:${IMAGE_TAG}
          docker push $ECR_REGISTRY/${APPLICATION_ECR_PREFIX}-${ECR_REPOSITORY}:${IMAGE_TAG}
        

